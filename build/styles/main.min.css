body,ul{margin:0;padding:0}body{background-color:#999;font-family:Montserrat}.container{width:1260px;margin:0 auto}ul{list-style:none}a{text-decoration:none;color:inherit}.soc-icon{margin:8px}.btn,.soc-icon .svg-eclipse{-webkit-transition:.2s;transition:.2s}.soc-icon .svg-eclipse:hover{fill:#bd9457}.soc-icon .svg-eclipse:hover+.svg-icon{fill:#fff}.btn{line-height:52px;width:160px;text-align:center;display:inline-block;border:1px solid #bd9457;border-radius:50px}.btn:hover{border-color:#fff;color:#fff}header .bgpic{width:100%;position:absolute;top:0;left:0;z-index:-1}header .header-top,header .header-top .header-top__contacts{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}header .header-top,header .header-top .header-top__nav .nav__list{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}header .header-top{padding-top:60px}header .header-top .header-top__nav{width:493px;font-size:14px;text-shadow:0 4px 4px rgba(0,0,0,.25)}header .header-top .header-top__nav .nav__list{display:-webkit-box;display:-ms-flexbox;display:flex;color:#fff}.btn,header .header-top .header-top__contacts .header-phone:hover,header .header-top .header-top__nav .nav__list .nav__item:hover{color:#bd9457}header .header-top .header-top__contacts{color:#fff;font-weight:600;font-size:20px}header .header-top .header-top__contacts .header-phone{-webkit-transition:.2s;transition:.2s;padding-right:14px}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
