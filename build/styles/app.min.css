body,ul{margin:0;padding:0}body{background-color:#999;font-family:Montserrat}.container{max-width:1260px;width:85%;height:100%;margin:0 auto;overflow:hidden}ul{list-style:none}.burger-menu span,.soc-icon:hover .svg-eclipse,a{-webkit-transition:.2s;transition:.2s}a{text-decoration:none;color:inherit}.soc-icon{margin:8px}.soc-icon:hover{-webkit-transform:translateY(-3px);transform:translateY(-3px)}.soc-icon:hover .svg-eclipse{fill:#bd9457}.soc-icon:hover .svg-icon{fill:#fff}.btn{line-height:52px;width:160px;text-align:center;display:inline-block;color:#bd9457;border:1px solid #bd9457;border-radius:50px;-webkit-transition:.2s;transition:.2s}.btn:hover{border-color:#fff;color:#fff}.bold{font-weight:700}.burger-menu{width:70px;height:70px;display:none;cursor:pointer;z-index:1001;padding:10px}@media (max-width:1180px){.burger-menu{display:block}}.burger-menu span{display:block;width:90%;height:5px;background-color:#fff;border-radius:5px;margin:7px auto 20px}.close{text-align:center}.close span{background-color:#444}.close span:nth-child(1){-webkit-transform-origin:top left;transform-origin:top left;-webkit-transform:rotate(45deg) translateY(5px);transform:rotate(45deg) translateY(5px)}.close span:nth-child(2){opacity:0}.close span:nth-child(3){-webkit-transform-origin:bottom left;transform-origin:bottom left;-webkit-transform:rotate(-45deg) translateY(-5px);transform:rotate(-45deg) translateY(-5px)}.mobile-menu{height:100vh;width:50%;background-color:#ebebeb;position:fixed;top:0;right:0;-webkit-transform:translateX(100%);transform:translateX(100%);-webkit-transition:.3s ease-in;transition:.3s ease-in;z-index:1000;-webkit-box-shadow:0 10px 40px rgba(0,0,0,.5);box-shadow:0 10px 40px rgba(0,0,0,.5);padding:100px 50px;display:none}@media (max-width:1180px){.mobile-menu{display:block}}.mobile-menu__contacts{width:80%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.mobile-menu__phone{font-size:30px}.mobile-menu__list{padding-top:40px}.mobile-menu__item{padding-bottom:30px;font-size:22px}.active{-webkit-transform:translateX(0);transform:translateX(0)}.background-mobile{opacity:0;z-index:-1;-webkit-transition:.4s;transition:.4s;position:absolute;top:0;left:0;width:100%;height:100%;background-color:rgba(0,0,0,.4);display:none}@media (max-width:1180px){.background-mobile{display:block}}.bgactive{z-index:100;opacity:1}header .bgpic{width:100%;position:absolute;top:0;left:0;z-index:-1}@media (max-width:768px){header .bgpic{height:100%;width:auto;left:-50%}}@media (max-width:600px){header .bgpic{height:100%;width:auto;left:-80%}}header .header-top,header .header-top .header-top__nav .nav__list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}header .header-top{-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding-top:60px;width:100%}header .header-top .header-top__nav{font-size:14px;text-shadow:0 4px 4px rgba(0,0,0,.25);width:470px}@media (max-width:1300px){header .header-top .header-top__nav{width:400px}}@media (max-width:1180px){header .header-top .header-top__nav{display:none}}header .header-top .header-top__nav .nav__list{color:#fff}header .header-top .header-top__contacts .header-phone:hover,header .header-top .header-top__nav .nav__list .nav__item:hover{color:#bd9457}header .header-top .header-top__contacts{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}header .header-top .header-top__contacts .header-phone{-webkit-transition:.2s;transition:.2s;color:#fff;font-weight:600;font-size:20px}@media (max-width:1300px){header .header-top .header-top__contacts .header-phone{font-size:17px}}@media (max-width:1180px){header .header-top .header-top__contacts .header-phone{display:none}}@media (max-width:1180px){header .header-top .header-top__contacts .soc-icon{display:none}}header .header-top .header-top__consult{padding-left:10px}header .header-top .header-top__consult a{font-weight:500;font-size:14px}header .header-main{color:#fff}header .header-main__text{padding-top:210px;font-weight:500;font-size:35px;line-height:48px;-webkit-transition:.2s;transition:.2s}@media (max-width:1180px){header .header-main__text{font-size:25px}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
