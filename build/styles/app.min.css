body{background-color:#fff;font-family:Montserrat}.container{width:100%;height:100%;margin:0 auto;overflow:hidden}ul{list-style:none}.burger-menu span,.soc-icon:hover .svg-eclipse,a{-webkit-transition:.2s;transition:.2s}a{text-decoration:none;color:inherit}body,h1,h2,h3,h4,ul{margin:0;padding:0}.inner-wrap{width:85%;margin:0 auto;max-width:1260px}.soc-icon{margin:8px}.soc-icon svg{width:37px;height:37px}.soc-icon:hover{-webkit-transform:translateY(-3px);transform:translateY(-3px)}.soc-icon:hover .svg-eclipse{fill:#bd9457}.soc-icon:hover .svg-icon{fill:#fff}.btn{line-height:52px;width:160px;text-align:center;display:inline-block;color:#bd9457;border:1px solid #bd9457;border-radius:50px;-webkit-transition:.2s;transition:.2s}.btn:hover{border-color:#fff;color:#fff}.section-header{font-size:35px;line-height:48px;font-weight:500;padding-top:100px}.section-text{font-size:18px;line-height:45px}.bold{font-weight:700}.burger-menu{width:80px;height:70px;display:none;cursor:pointer;z-index:1001;padding:10px;-webkit-transform:scale(.65);transform:scale(.65)}@media (max-width:1180px){.burger-menu{display:block}}.burger-menu span{display:block;width:90%;height:8px;background-color:#fff;border-radius:5px;margin:7px auto 20px}.burger-menu span:last-child{margin-bottom:0}.close{text-align:center}.close span{background-color:#444}.close span:nth-child(1){-webkit-transform-origin:top left;transform-origin:top left;-webkit-transform:rotate(45deg) translateY(5px);transform:rotate(45deg) translateY(5px)}.close span:nth-child(2){opacity:0}.close span:nth-child(3){-webkit-transform-origin:bottom left;transform-origin:bottom left;-webkit-transform:rotate(-45deg) translateY(-5px);transform:rotate(-45deg) translateY(-5px)}.mobile-menu{height:100vh;width:50%;background-color:#ebebeb;position:fixed;top:0;right:0;-webkit-transform:translateX(100%);transform:translateX(100%);-webkit-transition:.3s ease-in;transition:.3s ease-in;z-index:1000;-webkit-box-shadow:0 10px 40px rgba(0,0,0,.5);box-shadow:0 10px 40px rgba(0,0,0,.5);padding:100px 50px;display:none}@media (max-width:1180px){.mobile-menu{display:block}}@media (max-width:480px){.mobile-menu{padding-left:30px}}.mobile-menu__phone{padding-top:50px;font-size:2em;display:block;min-width:200px}@media (max-width:979px){.mobile-menu__phone{font-size:1.8em}}@media (max-width:600px){.mobile-menu__phone{font-size:1.5em}}@media (max-width:480px){.mobile-menu__phone{font-size:1.3em}}.mobile-menu .icons-group{display:block;height:2em;padding-top:20px}.mobile-menu__list{padding-top:40px}.doc__text p,.mobile-menu__item{padding-bottom:30px;font-size:1.4em}@media (max-width:600px){.mobile-menu__item{font-size:1.1em}}.mobile-menu .mobile-soc-icon{width:36px;height:36px;display:inline-block}.mobile-menu .mobile-soc-icon:hover{-webkit-transform:translateY(-3px);transform:translateY(-3px)}.active{-webkit-transform:translateX(0);transform:translateX(0)}.background-mobile{opacity:0;z-index:-1;-webkit-transition:.4s;transition:.4s;position:fixed;top:0;left:0;width:100%;height:100%;background-color:rgba(0,0,0,.4);display:none}@media (max-width:1180px){.background-mobile{display:block}}.bgactive{z-index:100;opacity:1}.header-main-btn{background:#bfaa86;border-radius:50px;font-size:14px;line-height:52px;color:#14120f;margin-top:50px;border:0}.inline-svg-icon{width:64px;height:64px}.small{width:192px;height:auto}@media (max-width:1440px){.small{width:150px;height:auto}}@media (max-width:1030px){.small{width:30vw;height:auto}}.tall{width:192px;height:auto}@media (max-width:1440px){.tall{width:150px;height:auto}}@media (max-width:1030px){.tall{width:30vw;height:auto}}.large{width:404px;height:auto}@media (max-width:1440px){.large{width:320px;height:auto}}@media (max-width:1030px){.large{width:62vw;height:auto}}@media (max-width:768px){.large{width:63vw;height:auto}}@media (max-width:480px){.large{width:64vw;height:auto}}@media (max-width:320px){.large{width:66vw;height:auto}}header{background:url(../img/header/header_bg.png);background-size:cover;background-position:center center}header .header-inner{position:relative;min-height:1000px}header .header-top,header .header-top .header-top__nav .nav__list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}header .header-top{-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding-top:60px;width:100%}@media (max-width:979px){header .header-top{padding-top:20px}}@media (max-width:600px){header .header-top .header-top__logo img{width:110px}}header .header-top .header-top__nav{font-size:14px;text-shadow:0 4px 4px rgba(0,0,0,.25);width:470px}@media (max-width:1300px){header .header-top .header-top__nav{width:400px}}@media (max-width:1180px){header .header-top .header-top__nav{display:none}}header .header-top .header-top__nav .nav__list{color:#fff}header .header-top .header-top__contacts .header-phone:hover,header .header-top .header-top__nav .nav__list .nav__item:hover{color:#bd9457}header .header-top .header-top__contacts{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}header .header-top .header-top__contacts .header-phone{-webkit-transition:.2s;transition:.2s;color:#fff;font-weight:600;font-size:20px}@media (max-width:1300px){header .header-top .header-top__contacts .header-phone{font-size:17px}}@media (max-width:1180px){header .header-top .header-top__contacts .header-phone{display:none}}@media (max-width:1180px){header .header-top .header-top__contacts .soc-icon{display:none}}header .header-top .header-top__consult{padding-left:10px;-webkit-transition:.2s;transition:.2s}@media (max-width:979px){header .header-top .header-top__consult{-webkit-transform:scale(.8);transform:scale(.8)}}@media (max-width:600px){header .header-top .header-top__consult{-webkit-transform:scale(.75);transform:scale(.75)}}@media (max-width:480px){header .header-top .header-top__consult{display:none}}.doc__text h4,header .header-top .header-top__consult a{font-weight:500;font-size:14px}header .header-main{color:#fff}header .header-main__text{padding-top:210px;font-weight:500;font-size:2.15em;line-height:1.4em;-webkit-transition:.2s;transition:.2s}@media (max-width:1180px){header .header-main__text{font-size:1.8em;padding-top:150px}}@media (max-width:768px){header .header-main__text{font-size:1.2em;padding-top:90px}}header .header-main__sub{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;max-width:800px;margin-left:-30px}@media (max-width:768px){header .header-main__sub{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;margin-top:40px;margin-left:40px}}@media (max-width:480px){header .header-main__sub{margin:0}}header .header-main__subblock{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;font-size:13px;line-height:23px;width:270px}@media (max-width:768px){header .header-main__subblock span{-ms-flex-negative:0;flex-shrink:0;width:190px;padding-bottom:30px}}header .header-main__subblock svg{-ms-flex-negative:0;flex-shrink:0;height:60px;width:60px;padding-right:20px;text-align:center;display:block}@media (max-width:768px){header .header-main__subblock svg{width:150px;padding-right:0}}@media (max-width:480px){header .header-main__subblock svg{display:none}}header .header-bottom__arrows{position:absolute;bottom:120px;right:50px}header .header-bottom__arrows .arrows{display:inline-block;width:50px;height:50px;border-radius:50px;-webkit-transition:.3s;transition:.3s;position:relative;cursor:pointer}header .header-bottom__arrows .arrows:hover{background:#fff;-webkit-box-shadow:0 8px 20px rgba(214,222,226,.42);box-shadow:0 8px 20px rgba(214,222,226,.42)}header .header-bottom__arrows .arrows svg{position:absolute;top:50%;left:50%;width:30px;height:30px}header .header-bottom__arrows .svg-arrow-l svg{-webkit-transform:translate(-30%,-50%);transform:translate(-30%,-50%)}header .header-bottom__arrows .svg-arrow-r svg{-webkit-transform:translate(-70%,-50%) rotate(180deg);transform:translate(-70%,-50%) rotate(180deg)}.reputation{margin:0 auto;padding-bottom:200px}.reputation__header{width:520px}@media (max-width:600px){.reputation__header{width:320px}}.reputation__text{width:930px;padding-bottom:50px}@media (max-width:1180px){.reputation__text{width:800px}}@media (max-width:768px){.reputation__text{width:450px}}@media (max-width:480px){.reputation__text{width:300px}}.reputation__advatages{display:-webkit-box;display:-ms-flexbox;display:flex;padding-bottom:110px}@media (max-width:600px){.reputation__advatages{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;text-align:center;width:300px;margin:0 auto}}.reputation__images{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;margin:-10px}@media (max-width:1030px){.reputation__images{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}}.reputation__images a{display:block;position:relative;width:100%;height:100%}.reputation__images a:before{position:absolute;top:60%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);width:50px;height:50px;content:'';background:url(../img/reputation/plus.png);z-index:1;opacity:0;-webkit-transition:.4s;transition:.4s}.reputation__images a:hover:before{top:50%;opacity:1}.reputation__images img{margin:10px;-webkit-transition:.3s;transition:.3s;position:relative}.reputation__images img:hover{-webkit-filter:brightness(.5);filter:brightness(.5)}.doc,.reputation__images .rep-col,.reputation__images .rep-group{display:-webkit-box;display:-ms-flexbox;display:flex}.reputation__images .rep-col{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.reputation__images .rep-row{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:nowrap;flex-wrap:nowrap}@media (max-width:1030px){.reputation__images .rep-3{display:none}}.reputation__images .rep-3_1{display:none}@media (max-width:1030px){.reputation__images .rep-3_1{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}}.doc{max-width:1260px;margin:0 auto;position:relative}@media (max-width:1392px){.doc{height:800px}}.doc__image{position:relative;margin-left:-70px;bottom:-20px;z-index:-10}@media (max-width:1392px){.doc__image{margin:0;bottom:-170px;left:-50px}}@media (max-width:1030px){.doc__image{display:none}}.doc__text{position:absolute;right:0;width:700px;height:546px;-webkit-box-shadow:0 12px 42px rgba(214,222,226,.42);box-shadow:0 12px 42px rgba(214,222,226,.42);padding:31px 59px 46px;z-index:10}@media (max-width:1392px){.doc__text{width:420px;height:auto;right:30px}}@media (max-width:1030px){.doc__text{position:relative;left:50%;-webkit-transform:translate(-50%);transform:translate(-50%)}}.doc__text h4{font-size:35px;line-height:48px;margin:0;padding-bottom:30px}@media (max-width:600px){.doc__text h4{font-size:25px;line-height:30px}}.doc__text p{font-size:16px;line-height:43px}@media (max-width:1392px){.doc__text p{padding-bottom:10px}}@media (max-width:600px){.doc__text p{font-size:14px;line-height:23px}}.doc__signature{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:start;-ms-flex-align:start;align-items:start}.doc__signature .sign{padding-top:20px;padding-left:30px}.fue{background:#f9f9f9;padding-bottom:50px}.fue__text{max-width:930px;padding-bottom:45px}.fue__block{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding-bottom:40px}@media (max-width:1030px){.fue__block{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}}.fue__image{position:relative}.fue__image img,.result .beer-slider img{width:100%}.fue__image svg{position:absolute;width:88px;height:88px;right:-44px;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%)}@media (max-width:1030px){.fue__image svg{top:calc(100% - 44px);right:50%;-webkit-transform:translateX(50%);transform:translateX(50%)}}.fue .fue__block p{max-width:511px;padding-left:115px;font-size:18px;line-height:37px}@media (max-width:1180px){.fue .fue__block p{padding-left:50px;padding-top:30px}}.result,.result__header{text-align:center}.result__header{padding-bottom:50px}.result .beer-slider{margin:0 auto;width:800px}.result .beer-slider .beer-reveal img{width:800px!important}@media (max-width:979px){.result .beer-slider .beer-reveal img{width:600px!important}}@media (max-width:768px){.result .beer-slider .beer-reveal img{width:400px!important}}@media (max-width:600px){.result .beer-slider .beer-reveal img{width:280px!important}}@media (max-width:979px){.result .beer-slider{width:600px}}@media (max-width:768px){.result .beer-slider{width:400px}}@media (max-width:600px){.result .beer-slider{width:280px}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
